apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "com.vanniktech.maven.publish"

android {
    namespace = "permissions.dispatcher.library"

    compileSdkVersion COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
    }

    compileOptions {
        sourceCompatibility Versions.JAVA_VERSION
        targetCompatibility Versions.JAVA_VERSION
    }

    kotlinOptions {
        jvmTarget = Versions.JVM_TARGET
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

//    libraryVariants.all {
//        it.generateBuildConfigProvider.configure { enabled = false }
//    }
}

//configurations {
//    lintChecks
//}

dependencies {
    implementation "androidx.core:core:1.16.0"
    implementation "androidx.fragment:fragment:$ANDROIDX_FRAGMENT_VERSION"
//    implementation "androidx.collection:collection:$ANDROIDX_LIBRARY_VERSION"

    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_KOTLIN_VERSION"
    testImplementation "org.powermock:powermock-api-mockito2:$POWERMOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"

    api project(path: ':annotation')
//    lintChecks project(path: ':lint', configuration: 'lintChecks')
}

//tasks.register("copyLintJar", Copy) {
//    it.from(configurations.lintChecks) {
//        rename { 'lint.jar' }
//    }
//    it.into 'build/intermediates/lint/'
//}
//
//project.afterEvaluate {
//    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
//    compileLintTask.dependsOn(copyLintJar)
//}

mavenPublishing {
    publishToMavenCentral()
}
